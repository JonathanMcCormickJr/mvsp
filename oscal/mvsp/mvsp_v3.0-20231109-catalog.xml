<?xml version="1.0" encoding="UTF-8"?><catalog xmlns="http://csrc.nist.gov/ns/oscal/1.0" uuid="d0772336-a368-4335-947d-cdf8d86f4015"><metadata><title>M
VSP - Minimum Viable Secure Product  - v3.0-20231109</title><published>2021-10-07T10:00:00Z</published><last-modified>2023-11-09T10:00:00Z</last-modified><version>2023</version><oscal-version>1.1.1</oscal-version><prop name="keywords" value="MVSP, Minimum Viable Secure Product, Software development, Application security, AppSec, System procurement, Self-Assessment, Software Development Lifecycle, SDLC, Contractual controls"/><link href="https://mvsp.dev" rel="reference" media-type="text/html"/><role id="creator"><title>Document creator</title></role><role id="contact"><title>Contact</title></role><party uuid="700b5bb8-209a-4f1f-9229-6e4b9ef40f4c" type="organization"><name>Google</name><email-address>mvsp@groups.io</email-address></party><responsible-party role-id="creator"><party-uuid>700b5bb8-209a-4f1f-9229-6e4b9ef40f4c</party-uuid></responsible-party><responsible-party role-id="contact"><party-uuid>700b5bb8-209a-4f1f-9229-6e4b9ef40f4c</party-uuid></responsible-party><remarks><p><a href="https://mvsp.dev">MVSP</a> and its translations are public domain under <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0 1.0 Universal</a> license.</p></remarks></metadata><group id="grp_1-mvsp" class="control-group"><title>Business controls</title><prop name="label" value="1"/><control id="ctl_1.1-mvsp" class="control"><title>External vulnerability reports</title><prop name="label" value="1.1"/><part id="stmt_1.1-mvsp" name="statement"><ul><li>Publish a vulnerability disclosure policy that outlines the testing scope, provides a legal safe harbor, and gives contact details for security reports</li>
<li>Develop and document procedures for triaging and remediating reported vulnerabilities</li>
<li>Respond to reports within a reasonable time frame</li>
<li>Patch vulnerabilities consistent with Control 3.4</li>
</ul></part><part id="what_1.1-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate processes are in place to accept and process external reports of security issues in your products and/or services.</p></part><part id="why_1.1-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>The ability for external parties to report possible vulnerabilities in your product or services is key to ensuring you can maintain an effective security and privacy posture. Ensuring that you share information on how external parties can appropriately and safely report possible security or privacy issues to you, ensures a clear and direct line of communication is available for issues to be reported.</p></part></control><control id="ctl_1.2-mvsp" class="control"><title>Customer testing</title><prop name="label" value="1.2"/><part id="stmt_1.2-mvsp" name="statement"><ul>
<li>On request, enable your customers or their delegates to test the security of your application</li>
<li>Test on a production or a non-production environment that closely resembles the production environment in functionality</li>
<li>Ensure non-production environments do not contain production data</li>
<li>Reasonable restrictions on testing can be defined</li>
</ul></part><part id="what_1.2-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate processes are in place to allow customers to safely and effectively perform testing against your products and/or services.</p></part><part id="why_1.2-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>If your service provides internet-accessible endpoints (e.g. a website or API), it is important to provide your customers with a suitable way to arrange security testing against a designated test environment. By building this requirement into your release schedule, you ensure testing is performed against designated test systems which replicate production, and are populated with non-production data.</p>
<p>As the goal of testing is to ensure the security of the application under test, and not the efficacy of any WAF or IDS rulesets, it is important the testing is performed without a Web Application Firewall, or other blocking technology deployed.</p>
<p>It is important to consider that someone will likely carry out testing on accessible services regardless of your internal policies. Making sure that there is a safe and clearly communicated way to perform testing, with optionally reasonable restrictions, is also helpful to protect your production environments.</p></part></control><control id="ctl_1.3-mvsp" class="control"><title>Self-assessment</title><prop name="label" value="1.3"/><part id="stmt_1.3-mvsp" name="statement"><p>Perform and make available security self-assessments for each qualifying product/service, using the latest MVSP release, at least annually</p></part><part id="what_1.3-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Annual reviews of your application security controls are performed for each qualifying product or service in order to identify corrective actions or areas of continued improvement.</p></part><part id="why_1.3-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Running through the MVSP baseline once per year for qualifying products and services helps to ensure that any changes are measured against the latest version of the baseline. Where gaps exist, highlighting these early on and taking corrective action ensures you maintain the baseline requirements and can mature the security of the application under review.</p></part></control><control id="ctl_1.4-mvsp" class="control"><title>External testing</title><prop name="label" value="1.4"/><part id="stmt_1.4-mvsp" name="statement"><p>Contract a security vendor to perform comprehensive penetration tests of your products, services, and dependent systems, at least annually</p></part><part id="what_1.4-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Processes are in place to schedule and perform regular third-party penetration testing against your products and/or services.</p></part><part id="why_1.4-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Alongside any security testing performed by your customers, it is important to ensure a full scope penetration test of the service is performed at least once per year by an independent third-party testing company.</p>
<p>Although more tightly scoped release testing may take place throughout the year, ensuring a holistic annual review of the platform is key to detecting issues which appear due to interaction between systems and new functionality. These kinds of issues are hard to detect during tightly scoped release reviews or code reviews.</p>
<p>Using an independent company for annual third party testing is important as they approach the review without any pre-existing opinions on how the application should function. This greenfield viewpoint ensures no assumptions are made regarding the security of specific functions or areas of the service which could lead to a lack of coverage or depth of review.</p></part></control><control id="ctl_1.5-mvsp" class="control"><title>Training</title><prop name="label" value="1.5"/><part id="stmt_1.5-mvsp" name="statement"><p>Implement role-specific security training for your personnel that is relevant to their business function</p></part><part id="what_1.5-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Processes are in place to provide regular and ongoing security awareness training. Example areas of training that should be considered are:</p>
<blockquote>
<ul>
<li>Applicable company policies</li>
<li>Proper data handling and protection of sensitive information</li>
<li>How to report suspicious activities</li>
</ul>
</blockquote></part><part id="why_1.5-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Providing your employees with appropriate ongoing training specific to their roles is key to ensuring they are up to date with the latest advancements in their field, and are well equipped to deal with evolving threats and requirements. This training should include information on how to react to phishing, and awareness of processes in place to report phishing attempts.</p></part></control><control id="ctl_1.6-mvsp" class="control"><title>Compliance</title><prop name="label" value="1.6"/><part id="stmt_1.6-mvsp" name="statement"><ul>
<li>Comply with industry security standards relevant to your business such as PCI DSS, HITRUST, ISO27001, and SSAE 18</li>
<li>Comply with local laws and regulations in jurisdictions applicable to your company and your customers, such as GDPR, Binding Corporate Rules, and Standard Contractual Clauses</li>
<li>Ensure data localization requirements are implemented in line with local regulations and contractual obligations</li>
</ul></part><part id="what_1.6-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Relevant compliance obligations are identified and completed based on your companies industry and regulatory requirements.</p></part><part id="why_1.6-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Compliance to standards and requirements relevant to your industry is a key element of a mature security and privacy program. The specifics depend on the area within which you operate. Compliance to a specific standard shouldn’t replace the baseline requirements set out in the MVSP, as the goals and specific controls may vary.</p></part></control><control id="ctl_1.7-mvsp" class="control"><title>Incident handling</title><prop name="label" value="1.7"/><part id="stmt_1.7-mvsp" name="statement"><ul>
<li>Notify relevant parties about any security breach that affects sensitive information no later than 72 hours upon discovery, and upon learning any additional details of the breach</li>
<li>Consider reporting the breach to relevant national cybersecurity agencies in line with local guidance and regulations</li>
<li>Include the following information in the notification:</li>
</ul>
<blockquote>
<ul>
<li>Nature of the breach</li>
<li>Relevant contact information</li>
<li>Consequences of the breach</li>
<li>Measures taken, or needing to be taken, to remediate the issue</li>
</ul>
</blockquote></part><part id="what_1.7-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Processes are in place to ensure the smooth handling of security and privacy incidents.</p></part><part id="why_1.7-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Clear and timely notification of incidents is important to ensure customers are able to understand how an incident may affect their data, and prepare for further actions required to mitigate the effects of a breach. The initial notification is expected within 72 hours of discovery, however it should be augmented and extended upon once a more detailed analysis has occurred and root causes are identified. Not all information will be available within 72 hours, however it is important to ensure processes are in place to provide initial information within this timeframe.</p></part></control><control id="ctl_1.8-mvsp" class="control"><title>Data handling</title><prop name="label" value="1.8"/><part id="stmt_1.8-mvsp" name="statement"><p>Ensure media sanitization processes based on NIST SP 800-88 (or equivalent) are implemented for storage media holding unencrypted production data</p></part><part id="what_1.8-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Data stored on removable or decommissioned hardware is appropriately handled.</p></part><part id="why_1.8-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Data sanitization is an important step to ensure data is not left accessible on storage media during the decommissioning process. By following standard guidelines to sanitize media you protect against possible leaks of sensitive data.</p></part></control></group><group id="grp_2-mvsp" class="control-group"><title>Application design controls</title><prop name="label" value="2"/><control id="ctl_2.1-mvsp" class="control"><title>Single sign-on</title><prop name="label" value="2.1"/><part id="stmt_2.1-mvsp" name="statement"><ul>
<li>Publish a vulnerability disclosure policy that outlines the testing scope, provides a legal safe harbor, and gives contact details for security reports</li>
<li>Develop and document procedures for triaging and remediating reported vulnerabilities</li>
<li>Respond to reports within a reasonable time frame</li>
<li>Patch vulnerabilities consistent with Control 3.4</li>
</ul></part><part id="what_2.1-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate processes are in place to accept and process external reports of security issues in your products and/or services.</p></part><part id="why_2.1-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Providing the ability for your customers to opt for single sign-on using federated identity providers is important for organizations wishing to maintain control over their accounts in a more centralized manner. Offering the ability to use a federated identity, without additional cost, allows users to rely on an established identity, with appropriate controls (e.g. two-factor authentication) implemented and enforced at the organization level.</p>
<p>Centralized control over these federated accounts also ensures the organization can control access to applications and services via a centralized authority, with the ability to deactivate access as required.</p>
<p>Single sign-on also ensures users are not required to remember, or store credentials for each individual service. This reduces the chance of account compromise, and allowing or organizations to respond holistically to credential breaches using a central service.</p></part></control><control id="ctl_2.2-mvsp" class="control"><title>HTTPS-only</title><prop name="label" value="2.2"/><part id="stmt_2.2-mvsp" name="statement"><ul>
<li>Redirect traffic from HTTP protocol (port 80) to HTTPS (port 443) (This does not apply to secure protocols designed to run on top of unencrypted connections, such as OCSP)</li>
<li>Scan and address issues using freely available modern TLS scanning tools</li>
<li>Include the Strict-Transport-Security header with a long max-age value</li>
<li>Set authentication cookies as Secure</li>
</ul></part><part id="what_2.2-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Sensitive data is encrypted in transit between the end-user and your product and/or service.</p></part><part id="why_2.2-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Applications or services passing sensitive data must ensure they encrypt data in transit. This should include any sites which allow for authentication, or links to sensitive data.</p>
<p>Implementation of strong encryption, and enforcement using Strict-Transport-Security ensures users are not exposed to unencrypted endpoints or attacks forcing them to leak sensitive data.</p>
<p>To ensure that cookies are also only transmitted via encrypted and integrity protected channels, cookies must use the Secure flag.</p></part></control><control id="ctl_2.3-mvsp" class="control"><title>Security headers</title><prop name="label" value="2.3"/><part id="stmt_2.3-mvsp" name="statement"><p>Apply appropriate security headers to reduce the application attack surface and limit post exploitation:</p>
<blockquote>
<ul>
<li>Set a minimally permissive Content Security Policy</li>
<li>Limit the ability to iframe the application by enabling framing controls with X-Frame-Options or CSP frame-ancestors</li>
<li>Disable caching for APIs and endpoints that return sensitive data</li>
</ul>
</blockquote></part><part id="what_2.3-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate browser protections are in place within your product and/or service to protect against common web threats.</p></part><part id="why_2.3-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Content Security Policy is a mechanism designed to make applications more secure against common web vulnerabilities, particularly cross-site scripting while iframing websites could lead to unexpected vulnerabilities. By adopting strict policies, which prevents the loading of untrusted scripts or plugins and limiting being iframed an application can add important defense-in-depth layers against markup injection attacks.</p>
<p>Security headers can also assist in providing isolation and protection against common attacks beyond those discussed above. You can find more information at <a href="https://securityheaders.com">securityheaders.com</a>.</p></part></control><control id="ctl_2.4-mvsp" class="control"><title>Password policy</title><prop name="label" value="2.4"/><part id="stmt_2.4-mvsp" name="statement"><p>If password authentication is used in addition to single sign-on:</p>
<blockquote>
<ul>
<li>Do not limit the permitted characters that can be used</li>
<li>Do not limit the length of the password to anything below 64 characters</li>
<li>Do not use secret questions as a sole password reset requirement</li>
<li>Require email verification of a password change request</li>
<li>Require the current password in addition to the new password during password change</li>
<li>Store passwords in a hashed and salted format using a memory-hard or CPU-hard one-way hash function</li>
<li>Enforce appropriate account lockout and brute-force protection on account access</li>
<li>Do not provide default passwords for users or administrators</li>
</ul>
</blockquote></part><part id="what_2.4-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate controls are in place to protect users who opt to use password-based authentication.</p></part><part id="why_2.4-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>For applications to additionally implement password authentication alongside single sign-on, a strong password policy must be put in place. These controls are designed to ensure users set strong, hard-to-guess passwords without an artificial upper bound on length or limitations in allowed charset. Setting a lower bound on length is encouraged, however. Entering the password should not disable or dissuade the use of password managers and should not disable the possibility of copy-pasting the password into the password field.</p>
<p>Hardened processes for password change or password reset are critical to protecting access to accounts, and should be designed and implemented carefully. The password reset process should not depend solely on security questions, as that would provide a base for social engineering attacks.</p>
<p>Storing passwords should only ever be done in a hashed and salted format using a memory-hard or CPU-hard one-way hash function specifically designed for passwords.</p>
<p>Additional guidance on Memorized Secrets (password/pin) can be found in NIST 800-63r3 or later.</p></part></control><control id="ctl_2.5-mvsp" class="control"><title>Security libraries</title><prop name="label" value="2.5"/><part id="stmt_2.5-mvsp" name="statement"><p>Use modern, maintained, and industry-standard frameworks, template languages, or libraries that systemically address implementation weaknesses by escaping the outputs and sanitizing the inputs</p></part><part id="what_2.5-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Standardized libraries are used to improve the security of your product and/or service.</p></part><part id="why_2.5-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Enforcing the use of established, tried, and tested security libraries and frameworks ensures developers are able to rely on existing solutions and are not expected to reinvent the wheel. By standardizing on libraries and frameworks that systemically address various implementation weaknesses, you can reduce or eliminate entire classes of bugs from your platform, and ensure new code does not include regressions that reintroduce these vulnerabilities.</p></part></control><control id="ctl_2.6-mvsp" class="control"><title>Dependency patching</title><prop name="label" value="2.6"/><part id="stmt_2.6-mvsp" name="statement"><ul>
<li>Ensure third-party dependencies are maintained and up-to-date, with security relevant updates having a severity score of <q>medium</q> or higher applied in line with your application patching schedule</li>
<li>Upon becoming aware of a Known Exploited Vulnerability affecting a third-party dependency, the patch should be prioritized</li>
<li>Where dependency patching or upgrades are not possible, equivalent mitigations should be implemented for all components of the application stack</li>
</ul></part><part id="what_2.6-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Processes are in place to identify, and maintain up-to-date components within your product and/or service. Vulnerabilities that are known to be exploited are appropriately prioritized.</p></part><part id="why_2.6-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Applying security patches in common applications and libraries is an important step to securing your infrastructure and application. Processes to deploy these fixes within a reasonable timeframe ensure targeted attacks exploiting these vulnerabilities do not affect the security of your product or data.</p>
<p>In cases where an application relies on a library with known vulnerabilities, ensuring the library is regularly patched also guarantees the application keeps pace with changes in the library. This reduces the chance of an urgent patch breaking application functionality due to a large jump in version.</p>
<p>Libraries or application versions marked as end-of-life should be considered as unpatched as they are no longer receiving security fixes.</p>
<p>Regular vulnerability scanning allows you to easily identify new vulnerabilities, as well as monitor where existing patches have not yet been fully implemented.</p></part></control><control id="ctl_2.7-mvsp" class="control"><title>Logging</title><prop name="label" value="2.7"/><part id="stmt_2.7-mvsp" name="statement"><p>Keep logs of:</p>
<blockquote>
<ul>
<li>Authentication events (success and failure)</li>
<li>Create, Read, Update, and Delete (CRUD) operations on application and system users and objects</li>
<li>Security relevant configuration changes (including disabling logging)</li>
<li>Application owner access to customer data (access transparency)</li>
</ul>
</blockquote>
<p>Logs must include user ID, IP address, valid timestamp, type of action performed, and object of this action. Logs must be stored for at least 30 days at no additional charge, and should not contain sensitive data or payloads.</p></part><part id="what_2.7-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate logs are stored to assist with debugging and incident response activities.</p></part><part id="why_2.7-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Having detailed logs ensures you are able to perform a detailed analysis of actions taken in the event of a breach. Ensure you record not only failed login attempts, but also successful logins, as this puts you in a better position to track the movement of a malicious actor across multiple areas of the infrastructure.</p>
<p>Care should be taken to avoid logging sensitive information such as passwords or other credentials.</p>
<p>Ensuring logs are available for an extended period of time also ensures you are able to track back any intrusion to the source.</p></part></control><control id="ctl_2.8-mvsp" class="control"><title>Encryption</title><prop name="label" value="2.8"/><part id="stmt_2.8-mvsp" name="statement"><p>Use modern, maintained, and industry-standard means of encryption to protect sensitive data in transit between systems, and at rest in online data storages and backups</p></part><part id="what_2.8-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Sensitive data is encrypted at rest within your product and/or service.</p></part><part id="why_2.8-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Sensitive data transiting untrusted networks or shared connections always needs to be encrypted. Similarly, sensitive data at rest should be stored in an encrypted format to prevent unauthorized access.</p>
<p>Where cryptographic keys are used, they should be managed in a way that ensures they are generated, stored, and deleted in a secure manner. Access to keys should be limited physically, logically, and through user/role access controls. Secret keys should not be accessible in source code.</p></part></control></group><group id="grp_3-mvsp" class="control-group"><title>Application implementation controls</title><prop name="label" value="3"/><control id="ctl_3.1-mvsp" class="control"><title>List of data</title><prop name="label" value="3.1"/><part id="stmt_3.1-mvsp" name="statement"><p>Maintain a list of sensitive data types that the application is expected to process</p></part><part id="what_3.1-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Information on the type and amount of data handled by your product and/or service is available for threat modeling or incident response purposes.</p></part><part id="why_3.1-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>A list of sensitive data types processed by the application should be available. This allows for easier threat modeling and risk analysis of the platform as functionality changes over time. This data also helps you quickly understand the exposure in the event of an incident.</p></part></control><control id="ctl_3.2-mvsp" class="control"><title>Data flow diagram</title><prop name="label" value="3.2"/><part id="stmt_3.2-mvsp" name="statement"><p>Maintain an up-to-date diagram indicating how sensitive data reaches your systems and where it ends up being stored</p></part><part id="what_3.2-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Information on the flow of data through systems is available for threat modeling or incident response purposes.</p></part><part id="why_3.2-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>In complex systems it is often difficult to understand how data flows from the user through the platform, and where this data is stored. By ensuring a data flow diagram is available, it is easy to understand where weaknesses may exist within the system, and create an accurate threat model. This data also helps you quickly understand the exposure in the event of an incident.</p></part></control><control id="ctl_3.3-mvsp" class="control"><title>Vulnerability prevention</title><prop name="label" value="3.3"/><part id="stmt_3.3-mvsp" name="statement"><p>Train your developers and implement development guidelines to prevent at least the following vulnerabilities:</p>
<blockquote>
<ul>
<li>Authorization bypass — Example: Accessing other customers' data or admin features from a regular account</li>
<li>Insecure session management — Examples: Guessable token; a token stored in an insecure location (e.g. cookie without Secure and HttpOnly flags set)</li>
<li>Injections — Examples: (No)SQL injection, LLM / Prompt injection, XXE, OS command injection</li>
<li>Cross-site scripting — Examples: Calling insecure JavaScript functions, performing insecure DOM manipulations, echoing back user input into HTML without escaping</li>
<li>Cross-site request forgery — Example: Accepting requests with an Origin header from a different domain</li>
<li>Handling untrusted data — Example: Reusing data supplied by users within sensitive application contexts</li>
</ul>
</blockquote></part><part id="what_3.3-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Appropriate developer training on common security issues is performed.</p></part><part id="why_3.3-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Training your development and quality assurance teams on commonly seen security issues ensures they are well equipped to reduce the occurrences of these vulnerabilities within your systems.</p>
<p>The examples provided in MVSP are a good starting point, however they should be reviewed based on your application’s specifics and the environments used to ensure you are addressing language- and infrastructure-specific vulnerabilities affecting your applications.</p></part></control><control id="ctl_3.4-mvsp" class="control"><title>Time to fix vulnerabilities</title><prop name="label" value="3.4"/><part id="stmt_3.4-mvsp" name="statement"><ul>
<li>Produce and deploy patches to address application vulnerabilities that materially impact security within 90 days of discovery</li>
<li>For vulnerabilities with evidence of active exploitation, production and deployment of patches should be prioritized</li>
<li>Publish a security bulletin that details the vulnerability and its root cause if the remedy requires action from customers</li>
</ul></part><part id="what_3.4-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Identified vulnerabilities are patched within a reasonable time frame, and customers are informed where appropriate.</p></part><part id="why_3.4-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Acting in a timely manner to address vulnerabilities detected within your platform ensures you are effectively protecting sensitive data. In cases where addressing a vulnerability requires a longer period of time, or users to alter the way they interact with your application, care should be taken to inform users in a timely manner.</p>
<p>Vulnerabilities that are actively being exploited should be suitably prioritized to reduce the impact and risk to customer data and environments. In cases where customers need to take action to protect themselves, a security bulletin should be published to ensure customers are made aware.</p></part></control><control id="ctl_3.5-mvsp" class="control"><title>Build and release process</title><prop name="label" value="3.5"/><part id="stmt_3.5-mvsp" name="statement"><ul>
<li>Must use a version control system and consistent build process that generates provenance describing how the artifact was built (SLSA Build Level 1)</li>
<li>Sensitive application credentials and tokens should be stored separately from the application’s source code</li>
</ul></part><part id="what_3.5-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Build processes are fully scripted/automated and generate provenance.</p></part><part id="why_3.5-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Hardening and automation of build processes is an essential first step to prevent tampering and provide the ability to auditability. Automation of build processes furthermore enables teams to react quickly to threats and incidents by ensuring a new version can be released with a vulnerability or bug fix or by upgrading a compromised dependency. Provenance is metadata about how an artifact was built, including the build process, top-level source, and dependencies. Knowing the provenance allows software consumers to make risk-based security decisions.</p>
<p>Provenance at SLSA Build level 1 does not protect against tampering, but it offers a basic level of code source identification and can aid in vulnerability management. For applications and services that process particularly sensitive data, higher <a href="https://slsa.dev/spec/v1.0/levels#build-l1">SLSA levels</a> can provide additional guarantees.</p>
<p>Additional checks should be made to ensure that sensitive application credentials or tokens are not stored alongside application code (e.g. in a GIT repository).</p></part></control></group><group id="grp_4-mvsp" class="control-group"><title>Operational controls</title><prop name="label" value="4"/><control id="ctl_4.1-mvsp" class="control"><title>Physical access</title><prop name="label" value="4.1"/><part id="stmt_4.1-mvsp" name="statement"><p>Validate the physical security of relevant facilities by ensuring the following controls are in place:</p>
<blockquote>
<ul>
<li>Layered perimeter controls and interior barriers</li>
<li>Managed access to keys</li>
<li>Entry and exit logs</li>
<li>Appropriate response plan for unauthorized access</li>
</ul>
</blockquote></part><part id="what_4.1-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Sensitive data stored or accessible from trusted locations is secured effectively.</p></part><part id="why_4.1-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>In instances where you use physical servers to house sensitive data, the physical security of these environments is crucial. Data center providers may implement these controls on your behalf.</p></part></control><control id="ctl_4.2-mvsp" class="control"><title>Logical access</title><prop name="label" value="4.2"/><part id="stmt_4.2-mvsp" name="statement"><ul>
<li>Limit sensitive data access exclusively to users with a legitimate need. The data owner must authorize such access</li>
<li>Deactivate redundant accounts and expired access grants in a timely manner</li>
<li>Perform regular reviews of access to validate need to know</li>
<li>Ensure remote access to customer data or production systems requires the use of Multi-Factor Authentication</li>
</ul></part><part id="what_4.2-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Access to sensitive data is tightly controlled and regularly reviewed.</p></part><part id="why_4.2-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Where your staff have legitimate access to sensitive data as part of their day-to-day work, this access should be regularly reviewed to ensure access is limited. The principle of least privilege should be applied to ensure only authorized users with a valid business need can access sensitive data. By adding Multi-Factor Authorization the risk of a compromise through phishing, or other attacks targeting employee systems or credentials is significantly reduced.</p></part></control><control id="ctl_4.3-mvsp" class="control"><title>Sub-processors</title><prop name="label" value="4.3"/><part id="stmt_4.3-mvsp" name="statement"><ul>
<li>Maintain a list of third-party companies with access to customer data, and make it available to clients and business partners upon request</li>
<li>Assess third-party companies annually against the latest MVSP release</li>
</ul></part><part id="what_4.3-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Understand where you may be sharing data with third-party sub-processors, and that suitable processes are in place to validate their security posture.</p></part><part id="why_4.3-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Where you may use third-party sub-processors, it is important to ensure that you are aware of the data that they have access to. These sub-processors should be appropriately measured against the MVSP baseline to ensure that data and integrations do not lower the overall security of the platform or service.</p></part></control><control id="ctl_4.4-mvsp" class="control"><title>Backup and disaster recovery</title><prop name="label" value="4.4"/><part id="stmt_4.4-mvsp" name="statement"><ul>
<li>Securely backup all data to a different location than where the application is running</li>
<li>Maintain and test disaster recovery plans in concert with your incident response planning, at least annually or after significant changes</li>
</ul></part><part id="what_4.4-mvsp" name="guidance"><title>What this control measures</title><prop name="label" value="What this control measures"/><p>Processes are in place to ensure backup and recovery of your product and/or service in the event of a disaster.</p></part><part id="why_4.4-mvsp" name="guidance"><title>Why this control matters</title><prop name="label" value="Why this control matters"/><p>Ensuring suitably tested backups are in place for disaster recovery is a critical step. This backup should be at a different location, and planned so it is possible to recover from a disaster scenario preventing access to any and all online data for an extended period of time.</p>
<p>Consideration should be given to planning how your disaster recovery processes would respond to commonly seen attacks (e.g ransomware, large-scale cloud service outages).</p></part></control></group><back-matter><resource uuid="c8cd4cae-88ab-44b8-9dbb-d239686a9ff5"><description><p>MVSP-v3.0-20231109</p></description><rlink href="https://raw.githubusercontent.com/vendorsec/mvsp/master/oscal/mvsp/mvsp_v3.0-20231109-catalog.xml" media-type="application/oscal.catalog+xml"/><rlink href="https://raw.githubusercontent.com/vendorsec/mvsp/master/oscal/mvsp/mvsp_v3.0-20231109-catalog.json" media-type="application/oscal.catalog+json"/><rlink href="https://raw.githubusercontent.com/vendorsec/mvsp/master/oscal/mvsp/mvsp_v3.0-20231109-catalog.yaml" media-type="application/oscal.catalog+yaml"/></resource><resource uuid="2c83d391-6b75-443f-88e3-d95fd9aa0802"><description><p>MVSP-v3.0-20231109</p></description><rlink href="https://mvsp.dev" media-type="text/html"/></resource></back-matter></catalog>